package com.example.come_on;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.text.DateFormat;
import java.text.ParseException;
import java.util.Calendar;
import java.util.Date;
import java.text.*;

import com.example.come_on.file.FileService;

import android.support.v7.app.ActionBarActivity;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.res.AssetManager;
import android.database.sqlite.SQLiteDatabase;
import android.media.MediaPlayer;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ExpandableListView.OnChildClickListener;
import android.widget.ImageButton;
import android.widget.TextView;
import android.widget.Toast;


public class MainActivity extends Activity {
	private Button button,begin;
	private TextView textView1,textView2;
	private ImageButton imageButton;
	private SharedPreferences sp;
	MediaPlayer mp2 = null;
	private static int countDay;
	private static int diffDay;
	public static boolean isSame;
    public static SQLiteDatabase db;
	private FileService service = null;
	public static int isFirst=0;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        button  = (Button)this.findViewById(R.id.button1);
        begin = (Button)this.findViewById(R.id.button2);
        imageButton = (ImageButton)this.findViewById(R.id.imageButton1);
        textView1 = (TextView)this.findViewById(R.id.textView3);
        textView2 = (TextView)this.findViewById(R.id.textView2);
        mp2 = MediaPlayer.create(this, R.raw.yuzumusic);
        sp = getSharedPreferences("userInfo", 0);
        String name =sp.getString("USER_NAME", "");
        boolean remember = sp.getBoolean("remember", false);
        if(remember){
        	textView2.setText(name);
        	textView1.setText("ª∂”≠ªÿ¿¥");
        }
        button.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				Intent intent = new Intent(MainActivity.this,
						InformationUp.class);
				startActivity(intent);
				isFirst +=1;
			}
		});
        
        imageButton.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				mp2.start();
       
			}
		});
        
        begin.setOnClickListener(new  OnClickListener() {
			
			@Override
			public void onClick(View arg0) {
				Intent intent = new Intent(MainActivity.this, ChoiceActivity.class);
				startActivity(intent);					
				
			}
		});
        
        service = new FileService(this);
        String previousTime = service.readContentFromFile("time.txt");
        String lastTime = service.readContentFromFile("diff.txt");
        SimpleDateFormat myFormatter = new SimpleDateFormat("yyyy-MM-dd");
//        String FirstTime = service.readContentFromFile("firstTime.txt");
//        if(FirstTime=="") {
//        	FirstTime = myFormatter.format(new Date());
//        	boolean flag = service.saveContentToFile("firstTime.txt",Context.MODE_WORLD_WRITEABLE,FirstTime.getBytes());
//        	isFirst = true;
//        }
       // else isFirst = isTheFirstDay();
        if(previousTime!="") {
        	
        	Date date = new Date();
    		Date lastDate = new Date();
			
		   try {
			lastDate = myFormatter.parse(previousTime);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
			
    		
    		long between_days=(date.getTime()-lastDate.getTime())/(1000*3600*24);
    		countDay =  Integer.parseInt(String.valueOf(between_days)) +1;
    		String countD = String.valueOf(countDay);
        	
        }
        
        else{
        	
        	previousTime = myFormatter.format(new Date());
    		boolean flag = service.saveContentToFile("time.txt",Context.MODE_WORLD_WRITEABLE,previousTime.getBytes());
    		countDay =1;
    }
 if(lastTime!="") {
        	
        	Date date = new Date();
    		Date lastDate = new Date();
			
		   try {
			lastDate = myFormatter.parse(lastTime);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
			
    		String now = myFormatter.format(date);
    		long diff_days=(date.getTime()-lastDate.getTime())/(1000*3600*24);
    		diffDay =  Integer.parseInt(String.valueOf(diff_days));
    		String countD = String.valueOf(diffDay);
    		boolean flag = service.saveContentToFile("diff.txt",Context.MODE_WORLD_WRITEABLE,now.getBytes());
        	
        }
        
        else{
        	
        	lastTime = myFormatter.format(new Date());
    		boolean flag = service.saveContentToFile("diff.txt",Context.MODE_WORLD_WRITEABLE,lastTime.getBytes());
    		diffDay =1;
    		String countD = String.valueOf(diffDay);
    }
    }
    public static int getCountDay(){
    	return countDay;
    }
    public static int getDiffDay(){
    	return diffDay;
    }
    public static boolean isTheSameDay() {
    	if(diffDay==0) return true;
    	else return false;
    }
    
       
}



 